funcion  SumaNumerosPares
    Definir suma, numero como Entero
    suma <- 0
    
    Para numero <- 1 Hasta 50 Con Paso 1
        Si numero MOD 2 = 0 Entonces
            suma <- suma + numero
        FinSi
    FinPara
	
    Escribir "La suma de los n�meros pares del 1 al 50 es: ", suma
	
FinFuncion
Funcion TablaDeMultiplicar
    Definir numero, resultado, i como Entero
    Escribir "Ingrese un n�mero para obtener su tabla de multiplicar: "
    Leer numero
	
    Para i <- 1 Hasta 12 Con Paso 1
        resultado <- numero * i
        Escribir numero, " x ", i, " = ", resultado
    FinPara
FinFuncion
Funcion ContadorDeVocales
    Definir palabra Como Caracter
	Definir contador, i Como Entero
    
    Escribir "Ingresa una palabra: "
    Leer palabra
    
    contador <- 0
    i <- 1
    
    Mientras i <= Longitud(palabra) Hacer
        // Obtener el car�cter actual
        caracter <- SubCadena(palabra, i, i)
        
        // Verificar si el car�cter es una vocal en min�scula
        Si caracter = "a" O caracter = "e" O caracter = "i" O caracter = "o" O caracter = "u" Entonces
            contador <- contador + 1
        FinSi
        
        i <- i + 1
    FinMientras
    
    Escribir "El n�mero de vocales en la palabra es: ", contador
	
FinFuncion

Funcion ContadorDeDigitos
	Definir palabra Como Caracter
    Definir i, contador Como Entero
    
    Escribir "Ingresa una palabra: "
    Leer palabra
    
    contador <- 0
    
    Para i <- 1 Hasta Longitud(palabra) Con Paso 1 Hacer
        Si (SubCadena (palabra, i, i)) >= "0" Y (SubCadena (palabra, i, i)) <= "9" Entonces
            contador <- contador + 1
        FinSi
    FinPara
    
    Escribir "El n�mero de d�gitos en la palabra es: ", contador
FinFuncion
funcion AdivinaElNumero
    Definir numeroAleatorio, numeroUsuario Como Entero
    Definir intentos Como Entero
    Definir adivinado Como Logico
    
    // Generar un n�mero aleatorio entre 1 y 100
    numeroAleatorio <- Aleatorio(1, 100)
    
    intentos <- 0
    adivinado <- Falso
    
    Escribir "Adivina el n�mero entre 1 y 100."
    
    Mientras No adivinado Hacer
        Escribir "Ingresa tu n�mero: "
        Leer numeroUsuario
        
        intentos <- intentos + 1
        
        Si numeroUsuario = numeroAleatorio Entonces
            Escribir "�Felicidades! Adivinaste el n�mero ", numeroAleatorio, " en ", intentos, " intentos."
            adivinado <- Verdadero
        Sino
            Si numeroUsuario < numeroAleatorio Entonces
                Escribir "El n�mero es mayor."
            Sino
                Escribir "El n�mero es menor."
            FinSi
        FinSi
    FinMientras
FinFuncion
funcion CContadorDeAlfabeto
    Definir palabra Como Caracter
	Definir i, contador Como Entero
    
    Escribir "Ingresa una palabra: "
    Leer palabra
    
    palabra <- Minusculas (palabra)  // Convertir la palabra a min�sculas para simplificar la comparaci�n
    
    contador <- 0
    
    Para i <- 1 Hasta Longitud(palabra) Con Paso 1 Hacer
        // Obtener el car�cter actual
        caracter <- SubCadena(palabra, i, i)
        
        // Verificar si el car�cter es una letra del alfabeto
        Si caracter >= "a" Y caracter <= "z" Entonces
            contador <- contador + 1
        FinSi
    FinPara
    
    Escribir "El n�mero de letras del alfabeto en la palabra es: ", contador
FinFuncion
Funcion SumaDeImpares
    Definir suma Como Entero
    suma <- 0
    
    Para numero <- 1 Hasta 100 Con Paso 2 Hacer
        suma <- suma + numero
    FinPara
    
    Escribir "La suma de los n�meros impares del 1 al 100 es: ", suma
FinFuncion
//ENTRADA: Pedimos al usuario que ingrese una palabra (leer).
//PROCESO: Utilizamos la función Longitud para contar cuántos caracteres hay en la palabra ingresada.
//SALIDA: Mostramos el número de caracteres.
Funcion contarCaracteres
	Definir palabra Como Cadena
	
	Escribir "Ingrese una palabra: "
	Leer palabra
	
	Escribir "La palabra tiene ", Longitud(palabra), " caracteres."
FinFuncion

//PROCESO: Pedimos al usuario que ingrese números enteros positivos uno por uno y utilizamos un bucle while 
//para calcular la suma de estos números. El ciclo debe terminar cuando el usuario ingrese un número negativo.
//SALIDA: Mostramos la suma de los números ingresados.
Funcion sumaNumerosPositivos
	Definir _numero, suma Como Entero
	suma = 0
	
	Escribir "Ingrese números enteros positivos (ingrese un número negativo para terminar):"
	Leer _numero
	
	Mientras _numero >= 0
		suma = suma + _numero
		Leer _numero
	FinMientras
	
	Escribir "La suma de los números ingresados es: ", suma
FinFuncion

//ENTRADA: Pedimos al usuario que ingrese un número entero positivo (leer).
//PROCESO: Utilizamos un bucle while para mostrar una cuenta regresiva desde ese número hasta 1.
//SALIDA: Mostramos la cuenta regresiva.
Funcion cuentaRegresiva
	Definir _numero Como Entero
	
	Escribir "Ingrese un número entero positivo: "
	Leer _numero
	
	Escribir "Cuenta regresiva desde ", _numero, " hasta 1:"
	
	Mientras numero >= 1
		Escribir _numero
		numero = _numero - 1
	FinMientras
FinFuncion

//PROCESO: Creamos un arreglo de números enteros y calculamos la suma de todos sus elementos.
//SALIDA: Mostramos la suma de los elementos del arreglo.
Funcion sumaElementosArreglo
	Definir arreglo, indice, elemento, suma Como Entero
	Dimension arreglo[5]
	
	suma = 0
	
	// Inicializamos el arreglo con valores
	arreglo[1] = 5
	arreglo[2] = 10
	arreglo[3] = 15
	arreglo[4] = 20
	arreglo[5] = 25
	
	Para indice = 5 Hasta 1 Con Paso -1 Hacer
		suma = suma + arreglo[indice]
	Fin Para
	
	Escribir "La suma de los elementos en el arreglo es: ", suma
FinFuncion

//PROCESO: Creamos un arreglo de calificaciones (números decimales) y calculamos el promedio de las calificaciones.
//SALIDA: Mostramos el promedio de las calificaciones en el arreglo.
Funcion promedioCalificaciones
	Definir calificaciones, suma, promedio Como Real
	Dimension calificaciones[5]
	
	suma = 0
	
	// Inicializamos el arreglo con calificaciones
	calificaciones[1] = 9.5
	calificaciones[2] = 8.0
	calificaciones[3] = 7.5
	calificaciones[4] = 9.0
	calificaciones[5] = 8.5
	
	Para indice = 5 Hasta 1 Con Paso -1 Hacer
		suma = suma + calificaciones[indice]
	Fin Para
	
	promedio = suma / 5
	
	Escribir "El promedio de las calificaciones es: ", promedio
FinFuncion

//PROCESO: Encontramos el valor máximo y mínimo en un arreglo de números enteros.
//SALIDA: Mostramos el valor máximo y mínimo.
Funcion encontrarMayorMenor
	Definir arreglo, _mayor, _menor Como Real
	Dimension arreglo[5]
	
	// Inicializamos el arreglo con valores
	//arreglo = [15, 7, 25, 10, 5]
	arreglo[1] = 5
	arreglo[2] = 7
	arreglo[3] = 25
	arreglo[4] = 10
	arreglo[5] = 5
	
	// Inicializamos las variables mayor y menor con el primer elemento del arreglo
	_mayor = arreglo[1]
	_menor = arreglo[1]
	
	Para indice = 5 Hasta 1 Con Paso -1 Hacer
		Si arreglo[indice] > _mayor Entonces
			_mayor = arreglo[indice]
		FinSi
		
		Si arreglo[indice] < _menor Entonces
			_menor = arreglo[indice]
		FinSi
	Fin Para
	
	Escribir "El valor máximo en el arreglo es: ", _mayor
	Escribir "El valor mínimo en el arreglo es: ", _menor
FinFuncion

//ENTRADA: Pedimos al usuario que ingrese un número a buscar en un arreglo (leer).
//PROCESO: Verificamos si ese número está presente en un arreglo dado.
//SALIDA: Mostramos si el número está presente o no.
Funcion buscarElemento
	Definir arreglo, _numero Como Entero
	Definir encontrado Como Logico
	Dimension  arreglo[5]
	
	encontrado = Falso
	
	// Inicializamos el arreglo con valores
	//arreglo = [10, 20, 30, 40, 50]
	arreglo[1] = 10
	arreglo[2] = 20
	arreglo[3] = 30
	arreglo[4] = 40
	arreglo[5] = 50
	
	Escribir "Ingrese un número para buscar en el arreglo: "
	Leer _numero
	
	Para indice = 5 Hasta 1 Con Paso -1 Hacer
		Si arreglo[indice] == _numero Entonces
			encontrado = Verdadero
			//Salir // Salimos del bucle si encontramos el número
		FinSi
	FinPara
	
	Si encontrado Entonces
		Escribir "El número ", _numero, " está presente en el arreglo."
	SiNo
		Escribir "El número ", _numero, " no está presente en el arreglo."
	FinSi
FinFuncion

//PROCESO: Contamos cuántos números pares hay en un arreglo de números enteros.
//SALIDA: Mostramos el número de elementos pares en el arreglo.
Funcion contarElementosPares
	Definir arreglo, elemento, contadorPares Como Entero
	Dimension arreglo[6]
	
	contadorPares = 0
	
	// Inicializamos el arreglo con valores
	//arreglo = [5, 10, 15, 20, 25, 30]
	arreglo[1] = 5
	arreglo[2] = 10
	arreglo[3] = 15
	arreglo[4] = 20
	arreglo[5] = 25
	arreglo[6] = 30
	
	Para indice = 6 Hasta 1 Con Paso -1 Hacer
		elemento = arreglo[indice]
		
		Si elemento % 2 == 0 Entonces
			contadorPares = contadorPares + 1
		FinSi
	FinPara
	
	Escribir "El número de elementos pares en el arreglo es: ", contadorPares
FinFuncion

//PROCESO: Invertimos el orden de los elementos en un arreglo.
//SALIDA: Mostramos el arreglo invertido.
Funcion invertirArreglo
	Definir longitudArreglo, arregloOriginal, arregloInvertido, elemento Como Entero
	Dimension arregloOriginal[5]
	Dimension arregloInvertido[5]
	
	// Inicializamos el arreglo original con valores
	arregloOriginal[1] = 1
	arregloOriginal[2] = 2
	arregloOriginal[3] = 3
	arregloOriginal[4] = 4
	arregloOriginal[5] = 5
	
	longitudArreglo = 5
	
	// Invertimos el arreglo y recorremos la mitad del arreglo, intercambiando 
	//los elementos desde el principio con los elementos desde el final
	Para indice = 1 Hasta longitudArreglo Hacer // o longitudArreglo/2
		elemento = arregloOriginal[indice]
		arregloInvertido[indice] = arregloOriginal[longitudArreglo -indice +1]
		//arregloInvertido[_longitud -indice +1] = elemnto
	FinPara
	
	Escribir "Arreglo invertido:"
	Escribir arregloInvertido[1]
	Escribir arregloInvertido[2]
	Escribir arregloInvertido[3]
	Escribir arregloInvertido[4]
	Escribir arregloInvertido[5]
FinFuncion

//ENTRADA: Pedimos al usuario que ingrese un valor a buscar en un arreglo (leer).
//PROCESO: Encontramos el índice de ese valor en un arreglo y mostramos todos los índices si el valor aparece más de una vez.
//SALIDA: Mostramos los índices del valor encontrado.
Funcion buscarIndiceValor
	Definir arreglo, _valor Como Entero
	Definir encontrado Como Logico
	Dimension arreglo[6]
	
	encontrado = Falso
	
	// Inicializamos el arreglo con valores
	//arreglo = [10, 20, 30, 40, 20, 50]
	arreglo[1] = 10
	arreglo[2] = 20
	arreglo[3] = 30
	arreglo[4] = 40
	arreglo[5] = 20
	arreglo[6] = 50
	
	Escribir "Ingrese un valor para buscar en el arreglo: "
	Leer _valor
	
	Escribir "Los índices del valor ", _valor, " en el arreglo son:"
	
	Para i = 1 Hasta 6
		Si arreglo[i] == _valor Entonces
			Escribir i
			encontrado = Verdadero
		FinSi
	FinPara
	
	Si no encontrado Entonces
		Escribir "El valor ", _valor, " no se encuentra en el arreglo."
	FinSi
FinFuncion

//PROCESO: Creamos una función sin parámetros para saludar.
//SALIDA: Mostramos un mensaje de saludo.
Funcion saludar
	Escribir "¡Hola! Bienvenido."
FinFuncion

//ENTRADA: Pedimos al usuario que ingrese dos números (leer).
//PROCESO: Creamos una función con parámetros para sumar los dos números.
//SALIDA: Mostramos la suma de los dos números.
Funcion sumarDosNumeros(numero1, numero2)
	Definir suma Como Entero
	suma = numero1 + numero2
	Escribir "La suma de ", numero1, " y ", numero2, " es: ", suma
FinFuncion

//ENTRADA: Pedimos al usuario que ingrese dos números (leer).
//PROCESO: Creamos una función con return para multiplicar los dos números y devolver el resultado.
//SALIDA: Mostramos el resultado de la multiplicación.
Funcion multiplicarDosNumeros(numero1, numero2)
	Definir resultado Como Entero
	resultado = numero1 * numero2
	Devolver resultado
FinFuncion

//ENTRADA: Pedimos al usuario que ingrese un número (leer).
//PROCESO: Creamos una función sin return para determinar si el número es par o impar y mostramos el resultado.
//SALIDA: Mostramos si el número es par o impar.
Funcion verificarParImpar(_numero)
	Si numero % 2 == 0 Entonces
		Escribir "El número ", _numero, " es par."
	SiNo
		Escribir "El número ", _numero, " es impar."
	FinSi
FinFuncion

//ENTRADA: Pedimos al usuario que ingrese la base y la altura del rectángulo (leer).
//PROCESO: Creamos una función con parámetros y return para calcular el área del rectángulo.
//SALIDA: Mostramos el área del rectángulo.
Funcion calcularAreaRectangulo(base, altura)
	Definir area Como Real
	area = base * altura
	Devolver area
FinFuncion

//PROCESO: Creamos una función sin parámetros para imprimir tu nombre.
//SALIDA: Mostramos tu nombre.
Funcion imprimirNombre
	Escribir "Mi nombre es [Tu Nombre]"
FinFuncion

//ENTRADA: Pedimos al usuario que ingrese una temperatura en grados Celsius (leer).
//PROCESO: Creamos una función con return para convertir grados Celsius a Fahrenheit.
//SALIDA: Mostramos la temperatura en grados Fahrenheit.
Funcion celsiusToFahrenheit(gradosCelsius)
	Definir gradosFahrenheit Como Real
	gradosFahrenheit = (gradosCelsius * 9/5) + 32
	Devolver gradosFahrenheit
FinFuncion

//ENTRADA: Pedimos al usuario que ingrese una frase y un carácter (leer).
//PROCESO: Creamos una función con parámetros para contar cuántas veces aparece el carácter en la frase.
//SALIDA: Mostramos el número de veces que aparece el carácter en la frase.
Funcion contarCaracterEnFrase(frase, _caracter)
	Definir contador Como Entero
	contador = 0
	
	Para index = 1 Hasta Longitud(frase)
		Si Subcadena(frase, index, index) == _caracter Entonces
			contador = contador + 1
		FinSi
	FinPara
	
	Escribir "El carácter: ", _caracter, " aparece ", contador, " veces en la frase."
FinFuncion

//PROCESO: Creamos una función sin parámetros para imprimir los números del 1 al 10.
//SALIDA: Mostramos los números.
Funcion imprimirNumerosDelUnoAlDiez
	Para i = 1 Hasta 10
		Escribir i
	FinPara
FinFuncion

//ENTRADA: Pedimos al usuario que ingrese una lista de números separados por comas (leer).
//PROCESO: Creamos una función con parámetros y return para sumar los números en la lista.
//SALIDA: Mostramos la suma de los números.
Funcion sumarListaNumeros(lista)
	Definir _numeros, suma Como Real
	
	_numeros = ConvertirANumero(lista)
	suma = 0
	
	Para index = 1 Hasta _numeros
		suma = suma + _numero
	FinPara
	
	Devolver suma
FinFuncion

//ENTRADA: Pedimos al usuario el valor de compras (leer).
//PROCESO: Calcualmos el valor de descuento (calcular), si las compras
//son mayores a $100 aplicamos descuento descuentoMax y si son menores aplicamos descuentoMin
//al valor resultante le sumamos el valor de iva.
//SALIDA: Mostramos al usuario el totalCompras (mostrar).
Funcion calcularTotalCompras
	Definir compras, descuentoMin, descuentoMax, iva, valorMaximo, totalCompras Como Real
	
	compras = 0
	descuentoMin = 15
	descuentoMax = 20
	iva = 12
	valorMaximo = 100
	totalCompras = 0
	
	Escribir "Ingrese el valor de las compras"
	Leer  compras
	
	si compras >= valorMaximo Entonces
		Definir  descuento Como Real
		descuento = (compras * (descuentoMax) / 100)
		compras = compras - descuento
	SiNo
		compras = compras - (compras * (descuentoMin) / 100)
	FinSi
	
	totalCompras = compras + (compras * (iva) / 100)
	
	Escribir  "Subtotal: ", compras
	Escribir  "IVA: ", iva, "%"
	Escribir  "Su valor de las compras mas IVA es: ", totalCompras
FinFuncion

Algoritmo Principal	
	//Ejercicios algoritmos secuenciales (paso a paso):
	//sumaDosNumeros
	//calcularAreaTriangulo
	//verificarParOImpar
	//calculadoraSimple
	//tablaMultiplicar
	//copiarPalabra
	
	//Ejercicios algoritmos selectivos (con condiciones):
	//encontrarMayor
	//verificarElegibilidadVotar
	//calcularBMI
	//verificarPositivoNegativoCero
	//verificarAnoBisiesto
	//determinarSignoZodiacal
	//verificarQuincena
	//determinarDiaSemana
	//compararFrases
	//calcularPrecioConDescuento
	//calcularFacturaConImpuestos
	//calcularSueldoConAumento
	//calcularCompraConDescuento
	//calcularImpuestoSalario
	//calcularImpuestoSalario2
	//calcularImpuestoSalario3
	//calcularBonoAntiguedad
	//calcularCostoEnvio
	//calcularDescuentoLealtad
	//calcularDescuentoVolumenCompra
	//calcularDescuentoVolumenCompra2
	//calcularDescuentoVolumenCompra3
	//calcularCostoServicio
	
	//Ejercicios algoritmos (con ciclos For y While):
	//sumaNumerosPares
	//tablaMultiplicar
	//contarVocales
	//contarDigitos
	//contarLetrasAlfabeto
	//sumaNumerosImpares
	//contarCaracteres
	//sumaNumerosPositivos
	//cuentaRegresiva
	
	//Ejercicios algoritmos (con arreglos):
	//sumaElementosArreglo
	//promedioCalificaciones
	//encontrarMayorMenor
	//buscarElemento
	//contarElementosPares
	//invertirArreglo
	//buscarIndiceValor
	
	//Ejercicios algoritmos (con funciones)
	//saludar
	//sumarDosNumeros(5, 10)
	//resultado = multiplicarDosNumeros(5, 50)
	//verificarParImpar(25)
	//areaRectangulo = calcularAreaRectangulo(base, altura)
	//imprimirNombre
	//fahrenheit = celsiusToFahrenheit(celsius)
	//contarCaracterEnFrase(frase, carac)
	//imprimirNumerosDelUnoAlDiez
	//sumaTotal = sumarListaNumeros(lista)
	
	//calcularTotalCompras
FinAlgoritmo
